import 'dart:core';
import 'dart:math';
import 'dart:ui';
import 'package:facebook/assets/Image_path.dart';
import 'package:facebook/assets/strings.dart';
import 'package:facebook/view/pages/profile.dart';
import '../view/widgets/assets.dart';

class PostModel {
  final String avatarImage;
  final VoidCallback profileOnTap;
  final String username;
  final String location;
  final String time;
  final VoidCallback moreOnTap;
  final String caption;
  final String postImage;
  final VoidCallback postOnTap;
  final VoidCallback likeOnTap;
  final VoidCallback commentOnTap;
  final VoidCallback shareOnTap;

  PostModel(
      {required this.avatarImage,
      required this.profileOnTap,
      required this.username,
      required this.location,
      required this.time,
      required this.moreOnTap,
      required this.caption,
      required this.postImage,
      required this.postOnTap,
      required this.likeOnTap,
      required this.commentOnTap,
      required this.shareOnTap});
}

List<PostModel> postsData = [
  PostModel(
      avatarImage: ImagePath.profileImage[Random().nextInt(11)],
      profileOnTap: () => gotoPage(page: const Profile()),
      username: Strings.friendsName[Random().nextInt(11)],
      location: Strings.locationat,
      time: Strings.timeat,
      moreOnTap: () => showSnackbar(message: 'more pressed'),
      caption: Strings.captionText,
      postImage: ImagePath.bgImage[Random().nextInt(11)],
      postOnTap: () => showSnackbar(message: 'post clicked'),
      likeOnTap: () => showSnackbar(message: 'like pressed'),
      commentOnTap: () => showSnackbar(message: 'comment pressed'),
      shareOnTap: () => showSnackbar(message: 'share tapped')),
  PostModel(
      avatarImage: ImagePath.profileImage[Random().nextInt(11)],
      profileOnTap: () => gotoPage(page: const Profile()),
      username: Strings.friendsName[Random().nextInt(11)],
      location: Strings.locationat,
      time: Strings.timeat,
      moreOnTap: () => showSnackbar(message: 'more pressed'),
      caption: Strings.captionText,
      postImage: ImagePath.bgImage[Random().nextInt(11)],
      postOnTap: () => showSnackbar(message: 'post clicked'),
      likeOnTap: () => showSnackbar(message: 'like pressed'),
      commentOnTap: () => showSnackbar(message: 'comment pressed'),
      shareOnTap: () => showSnackbar(message: 'share tapped')),
  PostModel(
      avatarImage: ImagePath.profileImage[Random().nextInt(11)],
      profileOnTap: () => gotoPage(page: const Profile()),
      username: Strings.friendsName[Random().nextInt(11)],
      location: Strings.locationat,
      time: Strings.timeat,
      moreOnTap: () => showSnackbar(message: 'more pressed'),
      caption: Strings.captionText,
      postImage: ImagePath.bgImage[Random().nextInt(11)],
      postOnTap: () => showSnackbar(message: 'post clicked'),
      likeOnTap: () => showSnackbar(message: 'like pressed'),
      commentOnTap: () => showSnackbar(message: 'comment pressed'),
      shareOnTap: () => showSnackbar(message: 'share tapped')),
  PostModel(
      avatarImage: ImagePath.profileImage[Random().nextInt(11)],
      profileOnTap: () => gotoPage(page: const Profile()),
      username: Strings.friendsName[Random().nextInt(11)],
      location: Strings.locationat,
      time: Strings.timeat,
      moreOnTap: () => showSnackbar(message: 'more pressed'),
      caption: Strings.captionText,
      postImage: ImagePath.bgImage[Random().nextInt(11)],
      postOnTap: () => showSnackbar(message: 'post clicked'),
      likeOnTap: () => showSnackbar(message: 'like pressed'),
      commentOnTap: () => showSnackbar(message: 'comment pressed'),
      shareOnTap: () => showSnackbar(message: 'share tapped')),
  PostModel(
      avatarImage: ImagePath.profileImage[Random().nextInt(11)],
      profileOnTap: () => gotoPage(page: const Profile()),
      username: Strings.friendsName[Random().nextInt(11)],
      location: Strings.locationat,
      time: Strings.timeat,
      moreOnTap: () => showSnackbar(message: 'more pressed'),
      caption: Strings.captionText,
      postImage: ImagePath.bgImage[Random().nextInt(11)],
      postOnTap: () => showSnackbar(message: 'post clicked'),
      likeOnTap: () => showSnackbar(message: 'like pressed'),
      commentOnTap: () => showSnackbar(message: 'comment pressed'),
      shareOnTap: () => showSnackbar(message: 'share tapped')),
  PostModel(
      avatarImage: ImagePath.profileImage[Random().nextInt(11)],
      profileOnTap: () => gotoPage(page: const Profile()),
      username: Strings.friendsName[Random().nextInt(11)],
      location: Strings.locationat,
      time: Strings.timeat,
      moreOnTap: () => showSnackbar(message: 'more pressed'),
      caption: Strings.captionText,
      postImage: ImagePath.bgImage[Random().nextInt(11)],
      postOnTap: () => showSnackbar(message: 'post clicked'),
      likeOnTap: () => showSnackbar(message: 'like pressed'),
      commentOnTap: () => showSnackbar(message: 'comment pressed'),
      shareOnTap: () => showSnackbar(message: 'share tapped')),
  PostModel(
      avatarImage: ImagePath.profileImage[Random().nextInt(11)],
      profileOnTap: () => gotoPage(page: const Profile()),
      username: Strings.friendsName[Random().nextInt(11)],
      location: Strings.locationat,
      time: Strings.timeat,
      moreOnTap: () => showSnackbar(message: 'more pressed'),
      caption: Strings.captionText,
      postImage: ImagePath.bgImage[Random().nextInt(11)],
      postOnTap: () => showSnackbar(message: 'post clicked'),
      likeOnTap: () => showSnackbar(message: 'like pressed'),
      commentOnTap: () => showSnackbar(message: 'comment pressed'),
      shareOnTap: () => showSnackbar(message: 'share tapped')),
  PostModel(
      avatarImage: ImagePath.profileImage[Random().nextInt(11)],
      profileOnTap: () => gotoPage(page: const Profile()),
      username: Strings.friendsName[Random().nextInt(11)],
      location: Strings.locationat,
      time: Strings.timeat,
      moreOnTap: () => showSnackbar(message: 'more pressed'),
      caption: Strings.captionText,
      postImage: ImagePath.bgImage[Random().nextInt(11)],
      postOnTap: () => showSnackbar(message: 'post clicked'),
      likeOnTap: () => showSnackbar(message: 'like pressed'),
      commentOnTap: () => showSnackbar(message: 'comment pressed'),
      shareOnTap: () => showSnackbar(message: 'share tapped')),
  PostModel(
      avatarImage: ImagePath.profileImage[Random().nextInt(11)],
      profileOnTap: () => gotoPage(page: const Profile()),
      username: Strings.friendsName[Random().nextInt(11)],
      location: Strings.locationat,
      time: Strings.timeat,
      moreOnTap: () => showSnackbar(message: 'more pressed'),
      caption: Strings.captionText,
      postImage: ImagePath.bgImage[Random().nextInt(11)],
      postOnTap: () => showSnackbar(message: 'post clicked'),
      likeOnTap: () => showSnackbar(message: 'like pressed'),
      commentOnTap: () => showSnackbar(message: 'comment pressed'),
      shareOnTap: () => showSnackbar(message: 'share tapped')),
  PostModel(
      avatarImage: ImagePath.profileImage[Random().nextInt(11)],
      profileOnTap: () => gotoPage(page: const Profile()),
      username: Strings.friendsName[Random().nextInt(11)],
      location: Strings.locationat,
      time: Strings.timeat,
      moreOnTap: () => showSnackbar(message: 'more pressed'),
      caption: Strings.captionText,
      postImage: ImagePath.bgImage[Random().nextInt(11)],
      postOnTap: () => showSnackbar(message: 'post clicked'),
      likeOnTap: () => showSnackbar(message: 'like pressed'),
      commentOnTap: () => showSnackbar(message: 'comment pressed'),
      shareOnTap: () => showSnackbar(message: 'share tapped')),
  PostModel(
      avatarImage: ImagePath.profileImage[Random().nextInt(11)],
      profileOnTap: () => gotoPage(page: const Profile()),
      username: Strings.friendsName[Random().nextInt(11)],
      location: Strings.locationat,
      time: Strings.timeat,
      moreOnTap: () => showSnackbar(message: 'more pressed'),
      caption: Strings.captionText,
      postImage: ImagePath.bgImage[Random().nextInt(11)],
      postOnTap: () => showSnackbar(message: 'post clicked'),
      likeOnTap: () => showSnackbar(message: 'like pressed'),
      commentOnTap: () => showSnackbar(message: 'comment pressed'),
      shareOnTap: () => showSnackbar(message: 'share tapped')),
  PostModel(
      avatarImage: ImagePath.profileImage[Random().nextInt(11)],
      profileOnTap: () => gotoPage(page: const Profile()),
      username: Strings.friendsName[Random().nextInt(11)],
      location: Strings.locationat,
      time: Strings.timeat,
      moreOnTap: () => showSnackbar(message: 'more pressed'),
      caption: Strings.captionText,
      postImage: ImagePath.bgImage[Random().nextInt(11)],
      postOnTap: () => showSnackbar(message: 'post clicked'),
      likeOnTap: () => showSnackbar(message: 'like pressed'),
      commentOnTap: () => showSnackbar(message: 'comment pressed'),
      shareOnTap: () => showSnackbar(message: 'share tapped')),
  PostModel(
      avatarImage: ImagePath.profileImage[Random().nextInt(11)],
      profileOnTap: () => gotoPage(page: const Profile()),
      username: Strings.friendsName[Random().nextInt(11)],
      location: Strings.locationat,
      time: Strings.timeat,
      moreOnTap: () => showSnackbar(message: 'more pressed'),
      caption: Strings.captionText,
      postImage: ImagePath.bgImage[Random().nextInt(11)],
      postOnTap: () => showSnackbar(message: 'post clicked'),
      likeOnTap: () => showSnackbar(message: 'like pressed'),
      commentOnTap: () => showSnackbar(message: 'comment pressed'),
      shareOnTap: () => showSnackbar(message: 'share tapped')),
  PostModel(
      avatarImage: ImagePath.profileImage[Random().nextInt(11)],
      profileOnTap: () => gotoPage(page: const Profile()),
      username: Strings.friendsName[Random().nextInt(11)],
      location: Strings.locationat,
      time: Strings.timeat,
      moreOnTap: () => showSnackbar(message: 'more pressed'),
      caption: Strings.captionText,
      postImage: ImagePath.bgImage[Random().nextInt(11)],
      postOnTap: () => showSnackbar(message: 'post clicked'),
      likeOnTap: () => showSnackbar(message: 'like pressed'),
      commentOnTap: () => showSnackbar(message: 'comment pressed'),
      shareOnTap: () => showSnackbar(message: 'share tapped')),
  PostModel(
      avatarImage: ImagePath.profileImage[Random().nextInt(11)],
      profileOnTap: () => gotoPage(page: const Profile()),
      username: Strings.friendsName[Random().nextInt(11)],
      location: Strings.locationat,
      time: Strings.timeat,
      moreOnTap: () => showSnackbar(message: 'more pressed'),
      caption: Strings.captionText,
      postImage: ImagePath.bgImage[Random().nextInt(11)],
      postOnTap: () => showSnackbar(message: 'post clicked'),
      likeOnTap: () => showSnackbar(message: 'like pressed'),
      commentOnTap: () => showSnackbar(message: 'comment pressed'),
      shareOnTap: () => showSnackbar(message: 'share tapped')),
  PostModel(
      avatarImage: ImagePath.profileImage[Random().nextInt(11)],
      profileOnTap: () => gotoPage(page: const Profile()),
      username: Strings.friendsName[Random().nextInt(11)],
      location: Strings.locationat,
      time: Strings.timeat,
      moreOnTap: () => showSnackbar(message: 'more pressed'),
      caption: Strings.captionText,
      postImage: ImagePath.bgImage[Random().nextInt(11)],
      postOnTap: () => showSnackbar(message: 'post clicked'),
      likeOnTap: () => showSnackbar(message: 'like pressed'),
      commentOnTap: () => showSnackbar(message: 'comment pressed'),
      shareOnTap: () => showSnackbar(message: 'share tapped')),
  PostModel(
      avatarImage: ImagePath.profileImage[Random().nextInt(11)],
      profileOnTap: () => gotoPage(page: const Profile()),
      username: Strings.friendsName[Random().nextInt(11)],
      location: Strings.locationat,
      time: Strings.timeat,
      moreOnTap: () => showSnackbar(message: 'more pressed'),
      caption: Strings.captionText,
      postImage: ImagePath.bgImage[Random().nextInt(11)],
      postOnTap: () => showSnackbar(message: 'post clicked'),
      likeOnTap: () => showSnackbar(message: 'like pressed'),
      commentOnTap: () => showSnackbar(message: 'comment pressed'),
      shareOnTap: () => showSnackbar(message: 'share tapped')),
  PostModel(
      avatarImage: ImagePath.profileImage[Random().nextInt(11)],
      profileOnTap: () => gotoPage(page: const Profile()),
      username: Strings.friendsName[Random().nextInt(11)],
      location: Strings.locationat,
      time: Strings.timeat,
      moreOnTap: () => showSnackbar(message: 'more pressed'),
      caption: Strings.captionText,
      postImage: ImagePath.bgImage[Random().nextInt(11)],
      postOnTap: () => showSnackbar(message: 'post clicked'),
      likeOnTap: () => showSnackbar(message: 'like pressed'),
      commentOnTap: () => showSnackbar(message: 'comment pressed'),
      shareOnTap: () => showSnackbar(message: 'share tapped')),
];
